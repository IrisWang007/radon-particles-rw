tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.azure.AzureFunctionLocal:
    derived_from: radon.nodes.abstract.Function
    metadata:
      targetNamespace: "radon.nodes.azure"
      abstract: "false"
      final: "false"
    properties:
      storage_account_name:
        type: string
      resource_group_name:
        type: string
      runtime_verison:
        type: string
      function_app_name:
        type: string
      function_name:
        type: string
      function_verison:
        type: integer
        default: 2
        constraints:
          - valid_values: [ 2,3 ]
      os_type:
        type: string
      zip_file:
        type: string
      runtime_type:
        type: string
        default: python
      # path:
      #   type: string
      # storage_account_name:
      #   type: string
      #   description: The name of the existing Azure storage account
      # port:
      #   type: integer
      # function_name:
      #   type: string
      #   description: The Azure function name
      # resource_group_name:
      #   type: string
      #   description: The name of the existing Azure resource group
      # region:
      #   type: string
      #   description: The identifier for Azure region in which resources are/will be deployed
      # order:
      #   type: integer
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: radon.nodes.azure.AzurePlatform
          relationship: tosca.relationships.HostedOn
          occurrences: [ 1, 1 ]
      - connect:
          capability: tosca.capabilities.Container
          node: radon.nodes.azure.AzureDurableOrchestrator
          relationship: radon.relationships.azure.ConnectToDurable
          occurrences: [ 1, 1 ]
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          # path:
          #   type: string
          #   required: true
          #   default: { get_property: [ SELF, path ] }
          # storage_account_name:
          #   type: string
          #   description: The name of the existing Azure storage account
          #   required: false
          #   default: { get_property: [ SELF, storage_account_name ] }
          # port:
          #   type: integer
          #   description: The Azure function app OS type
          #   required: false
          #   default: { get_property: [ SELF, port ] }
          # function_name:
          #   type: string
          #   description: The version of the Azure function app
          #   required: false
          #   default: { get_property: [ SELF, function_name ] }
          # resource_group_name:
          #   type: string
          #   description: The name of the existing Azure resource group
          #   required: false
          #   default: { get_property: [ SELF, resource_group_name ] }
          # region:
          #   type: string
          #   description: The identifier for Azure region in which resources are/will be deployed
          #   required: false
          #   default: { get_property: [ SELF, region ] }
          # order:
          #   type: integer
          #   required: true
          #   default: { get_property: [ SELF, order ] }
          storage_account_name:
            type: string
            default: { get_property: [ SELF, storage_account_name ] }
          resource_group_name:
            type: string
            default: { get_property: [ SELF, resource_group_name ] }
          runtime_verison:
            type: string
            default: { get_property: [ SELF, runtime_verison ] }
          function_app_name:
            type: string
            default: { get_property: [ SELF, function_app_name ] }
          function_name:
            type: string
            default: { get_property: [ SELF, function_name ] }
          function_verison:
            type: integer
            default: { get_property: [ SELF, function_verison ] }
          zip_file:
            type: string
            default: { get_property: [ SELF, zip_file ] }
          runtime_type:
            type: string
            default: { get_property: [ SELF, runtime_type ] }
          os_type:
            type: string
            default: { get_property: [ SELF, os_type ] }
        operations:
          create:
            description: The standard create operation
            implementation:
              primary: create
              timeout: 0
    artifacts:
      create:
        type: radon.artifacts.Ansible
        description: The YAML artifact for creation
        file: create.yml
